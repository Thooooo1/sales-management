{"level":"error","message":"Login error: Error: error happened in your connection. Reason: getaddrinfo ENOTFOUND db\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:157:16)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'error happened in your connection. Reason: getaddrinfo ENOTFOUND db'\n}","service":"sales-management-service","timestamp":"2025-06-01 22:09:55"}
{"level":"error","message":"Login error: Error: error happened in your connection. Reason: getaddrinfo ENOTFOUND db\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:157:16)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'error happened in your connection. Reason: getaddrinfo ENOTFOUND db'\n}","service":"sales-management-service","timestamp":"2025-06-01 22:09:56"}
{"level":"error","message":"Login error: Error: error happened in your connection. Reason: getaddrinfo ENOTFOUND db\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:157:16)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'error happened in your connection. Reason: getaddrinfo ENOTFOUND db'\n}","service":"sales-management-service","timestamp":"2025-06-01 22:09:57"}
{"level":"error","message":"Login error: Error: error happened in your connection. Reason: getaddrinfo ENOTFOUND db\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:157:16)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'error happened in your connection. Reason: getaddrinfo ENOTFOUND db'\n}","service":"sales-management-service","timestamp":"2025-06-01 22:09:58"}
{"level":"error","message":"Login error: Error: error happened in your connection. Reason: getaddrinfo ENOTFOUND db\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:157:16)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'error happened in your connection. Reason: getaddrinfo ENOTFOUND db'\n}","service":"sales-management-service","timestamp":"2025-06-01 22:10:00"}
{"level":"error","message":"Login error: Error: error happened in your connection. Reason: getaddrinfo ENOTFOUND db\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:157:16)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'error happened in your connection. Reason: getaddrinfo ENOTFOUND db'\n}","service":"sales-management-service","timestamp":"2025-06-01 22:10:01"}
{"level":"error","message":"Login error: Error: error happened in your connection. Reason: getaddrinfo ENOTFOUND db\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:157:16)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'error happened in your connection. Reason: getaddrinfo ENOTFOUND db'\n}","service":"sales-management-service","timestamp":"2025-06-01 22:10:03"}
{"level":"error","message":"Login error: Error: error happened in your connection. Reason: getaddrinfo ENOTFOUND db\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:157:16)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'error happened in your connection. Reason: getaddrinfo ENOTFOUND db'\n}","service":"sales-management-service","timestamp":"2025-06-01 22:10:11"}
{"level":"error","message":"Login error: Error: error happened in your connection. Reason: getaddrinfo ENOTFOUND db\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:157:16)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'error happened in your connection. Reason: getaddrinfo ENOTFOUND db'\n}","service":"sales-management-service","timestamp":"2025-06-01 22:10:13"}
{"level":"error","message":"Login error: Error: Database does not exist.\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:206:20)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'Database does not exist.',\n  scope: 'couch',\n  statusCode: 404,\n  request: {\n    method: 'post',\n    headers: {\n      'content-type': 'application/json',\n      accept: 'application/json',\n      'user-agent': 'nano/10.1.4 (Node.js v22.13.1)',\n      'Accept-Encoding': 'deflate, gzip'\n    },\n    qsStringifyOptions: { arrayFormat: 'repeat' },\n    url: 'http://XXXXXX:XXXXXX@localhost:5984/users/_find',\n    params: undefined,\n    paramsSerializer: {\n      serialize: [Function: serialize] { [length]: 1, [name]: 'serialize' }\n    },\n    data: '{\"selector\":{\"username\":\"admin\"}}',\n    maxRedirects: 0,\n    httpAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 80,\n      protocol: 'http:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {\n        'localhost:5984:': [ [Socket], [length]: 1 ]\n      },\n      freeSockets: [Object: null prototype] {},\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 1,\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    httpsAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 443,\n      protocol: 'https:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {},\n      freeSockets: [Object: null prototype] {},\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 0,\n      maxCachedSessions: 100,\n      _sessionCache: { map: {}, list: [ [length]: 0 ] },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    }\n  },\n  headers: {\n    uri: 'http://XXXXXX:XXXXXX@localhost:5984/users/_find',\n    statusCode: 404,\n    'cache-control': 'must-revalidate',\n    connection: 'close',\n    'content-type': 'application/json',\n    date: 'Sun, 01 Jun 2025 15:20:06 GMT',\n    'x-couch-request-id': '3e32c77fd0',\n    'x-couchdb-body-time': '0'\n  },\n  errid: 'non_200',\n  name: 'Error',\n  description: 'Database does not exist.',\n  error: 'not_found',\n  reason: 'Database does not exist.'\n}","service":"sales-management-service","timestamp":"2025-06-01 22:20:07"}
{"level":"error","message":"Login error: Error: Database does not exist.\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:206:20)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'Database does not exist.',\n  scope: 'couch',\n  statusCode: 404,\n  request: {\n    method: 'post',\n    headers: {\n      'content-type': 'application/json',\n      accept: 'application/json',\n      'user-agent': 'nano/10.1.4 (Node.js v22.13.1)',\n      'Accept-Encoding': 'deflate, gzip'\n    },\n    qsStringifyOptions: { arrayFormat: 'repeat' },\n    url: 'http://XXXXXX:XXXXXX@localhost:5984/users/_find',\n    params: undefined,\n    paramsSerializer: {\n      serialize: [Function: serialize] { [length]: 1, [name]: 'serialize' }\n    },\n    data: '{\"selector\":{\"username\":\"admin\"}}',\n    maxRedirects: 0,\n    httpAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 80,\n      protocol: 'http:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {\n        'localhost:5984:': [ [Socket], [length]: 1 ]\n      },\n      freeSockets: [Object: null prototype] {},\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 1,\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    httpsAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 443,\n      protocol: 'https:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {},\n      freeSockets: [Object: null prototype] {},\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 0,\n      maxCachedSessions: 100,\n      _sessionCache: { map: {}, list: [ [length]: 0 ] },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    }\n  },\n  headers: {\n    uri: 'http://XXXXXX:XXXXXX@localhost:5984/users/_find',\n    statusCode: 404,\n    'cache-control': 'must-revalidate',\n    connection: 'close',\n    'content-type': 'application/json',\n    date: 'Sun, 01 Jun 2025 15:20:21 GMT',\n    'x-couch-request-id': '021f6a374b',\n    'x-couchdb-body-time': '0'\n  },\n  errid: 'non_200',\n  name: 'Error',\n  description: 'Database does not exist.',\n  error: 'not_found',\n  reason: 'Database does not exist.'\n}","service":"sales-management-service","timestamp":"2025-06-01 22:20:22"}
{"level":"error","message":"Login error: Error: Database does not exist.\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:206:20)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'Database does not exist.',\n  scope: 'couch',\n  statusCode: 404,\n  request: {\n    method: 'post',\n    headers: {\n      'content-type': 'application/json',\n      accept: 'application/json',\n      'user-agent': 'nano/10.1.4 (Node.js v22.13.1)',\n      'Accept-Encoding': 'deflate, gzip'\n    },\n    qsStringifyOptions: { arrayFormat: 'repeat' },\n    url: 'http://XXXXXX:XXXXXX@localhost:5984/users/_find',\n    params: undefined,\n    paramsSerializer: {\n      serialize: [Function: serialize] { [length]: 1, [name]: 'serialize' }\n    },\n    data: '{\"selector\":{\"username\":\"admin\"}}',\n    maxRedirects: 0,\n    httpAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 80,\n      protocol: 'http:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {\n        'localhost:5984:': [ [Socket], [length]: 1 ]\n      },\n      freeSockets: [Object: null prototype] {},\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 1,\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    httpsAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 443,\n      protocol: 'https:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {},\n      freeSockets: [Object: null prototype] {},\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 0,\n      maxCachedSessions: 100,\n      _sessionCache: { map: {}, list: [ [length]: 0 ] },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    }\n  },\n  headers: {\n    uri: 'http://XXXXXX:XXXXXX@localhost:5984/users/_find',\n    statusCode: 404,\n    'cache-control': 'must-revalidate',\n    connection: 'close',\n    'content-type': 'application/json',\n    date: 'Sun, 01 Jun 2025 15:26:24 GMT',\n    'x-couch-request-id': 'b259fb6c16',\n    'x-couchdb-body-time': '0'\n  },\n  errid: 'non_200',\n  name: 'Error',\n  description: 'Database does not exist.',\n  error: 'not_found',\n  reason: 'Database does not exist.'\n}","service":"sales-management-service","timestamp":"2025-06-01 22:26:24"}
{"level":"error","message":"Login error: Error: Database does not exist.\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:206:20)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'Database does not exist.',\n  scope: 'couch',\n  statusCode: 404,\n  request: {\n    method: 'post',\n    headers: {\n      'content-type': 'application/json',\n      accept: 'application/json',\n      'user-agent': 'nano/10.1.4 (Node.js v22.13.1)',\n      'Accept-Encoding': 'deflate, gzip'\n    },\n    qsStringifyOptions: { arrayFormat: 'repeat' },\n    url: 'http://XXXXXX:XXXXXX@localhost:5984/users/_find',\n    params: undefined,\n    paramsSerializer: {\n      serialize: [Function: serialize] { [length]: 1, [name]: 'serialize' }\n    },\n    data: '{\"selector\":{\"username\":\"admin\"}}',\n    maxRedirects: 0,\n    httpAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 80,\n      protocol: 'http:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {\n        'localhost:5984:': [ [Socket], [length]: 1 ]\n      },\n      freeSockets: [Object: null prototype] {},\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 1,\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    httpsAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 443,\n      protocol: 'https:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {},\n      freeSockets: [Object: null prototype] {},\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 0,\n      maxCachedSessions: 100,\n      _sessionCache: { map: {}, list: [ [length]: 0 ] },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    }\n  },\n  headers: {\n    uri: 'http://XXXXXX:XXXXXX@localhost:5984/users/_find',\n    statusCode: 404,\n    'cache-control': 'must-revalidate',\n    connection: 'close',\n    'content-type': 'application/json',\n    date: 'Sun, 01 Jun 2025 15:26:49 GMT',\n    'x-couch-request-id': 'fa822114b2',\n    'x-couchdb-body-time': '0'\n  },\n  errid: 'non_200',\n  name: 'Error',\n  description: 'Database does not exist.',\n  error: 'not_found',\n  reason: 'Database does not exist.'\n}","service":"sales-management-service","timestamp":"2025-06-01 22:26:49"}
{"level":"error","message":"Create order error: Error: missing\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:206:20)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'missing',\n  scope: 'couch',\n  statusCode: 404,\n  request: {\n    method: 'get',\n    headers: {\n      'content-type': 'application/json',\n      accept: 'application/json',\n      'user-agent': 'nano/10.1.4 (Node.js v22.13.1)',\n      'Accept-Encoding': 'deflate, gzip'\n    },\n    qsStringifyOptions: { arrayFormat: 'repeat' },\n    url: 'http://XXXXXX:XXXXXX@localhost:5984/products/undefined',\n    params: undefined,\n    paramsSerializer: {\n      serialize: [Function: serialize] { [length]: 1, [name]: 'serialize' }\n    },\n    data: undefined,\n    maxRedirects: 0,\n    httpAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 80,\n      protocol: 'http:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {},\n      freeSockets: [Object: null prototype] {\n        'localhost:5984:': [ [Socket], [length]: 1 ]\n      },\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 1,\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    httpsAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 443,\n      protocol: 'https:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {},\n      freeSockets: [Object: null prototype] {},\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 0,\n      maxCachedSessions: 100,\n      _sessionCache: { map: {}, list: [ [length]: 0 ] },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    }\n  },\n  headers: {\n    uri: 'http://XXXXXX:XXXXXX@localhost:5984/products/undefined',\n    statusCode: 404,\n    'cache-control': 'must-revalidate',\n    'content-type': 'application/json',\n    date: 'Mon, 02 Jun 2025 03:00:30 GMT',\n    'x-couch-request-id': '3be8aa7583',\n    'x-couchdb-body-time': '0'\n  },\n  errid: 'non_200',\n  name: 'Error',\n  description: 'missing',\n  error: 'not_found',\n  reason: 'missing'\n}","service":"sales-management-service","timestamp":"2025-06-02 10:00:31"}
{"level":"error","message":"Create order error: Error: missing\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:206:20)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'missing',\n  scope: 'couch',\n  statusCode: 404,\n  request: {\n    method: 'get',\n    headers: {\n      'content-type': 'application/json',\n      accept: 'application/json',\n      'user-agent': 'nano/10.1.4 (Node.js v22.13.1)',\n      'Accept-Encoding': 'deflate, gzip'\n    },\n    qsStringifyOptions: { arrayFormat: 'repeat' },\n    url: 'http://XXXXXX:XXXXXX@localhost:5984/products/undefined',\n    params: undefined,\n    paramsSerializer: {\n      serialize: [Function: serialize] { [length]: 1, [name]: 'serialize' }\n    },\n    data: undefined,\n    maxRedirects: 0,\n    httpAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 80,\n      protocol: 'http:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {},\n      freeSockets: [Object: null prototype] {\n        'localhost:5984:': [ [Socket], [length]: 1 ]\n      },\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 1,\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    httpsAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 443,\n      protocol: 'https:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {},\n      freeSockets: [Object: null prototype] {},\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 0,\n      maxCachedSessions: 100,\n      _sessionCache: { map: {}, list: [ [length]: 0 ] },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    }\n  },\n  headers: {\n    uri: 'http://XXXXXX:XXXXXX@localhost:5984/products/undefined',\n    statusCode: 404,\n    'cache-control': 'must-revalidate',\n    'content-type': 'application/json',\n    date: 'Mon, 02 Jun 2025 03:03:33 GMT',\n    'x-couch-request-id': 'bced457d94',\n    'x-couchdb-body-time': '0'\n  },\n  errid: 'non_200',\n  name: 'Error',\n  description: 'missing',\n  error: 'not_found',\n  reason: 'missing'\n}","service":"sales-management-service","timestamp":"2025-06-02 10:03:34"}
{"level":"error","message":"Create order error: Error: missing\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:206:20)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'missing',\n  scope: 'couch',\n  statusCode: 404,\n  request: {\n    method: 'get',\n    headers: {\n      'content-type': 'application/json',\n      accept: 'application/json',\n      'user-agent': 'nano/10.1.4 (Node.js v22.13.1)',\n      'Accept-Encoding': 'deflate, gzip'\n    },\n    qsStringifyOptions: { arrayFormat: 'repeat' },\n    url: 'http://XXXXXX:XXXXXX@localhost:5984/products/undefined',\n    params: undefined,\n    paramsSerializer: {\n      serialize: [Function: serialize] { [length]: 1, [name]: 'serialize' }\n    },\n    data: undefined,\n    maxRedirects: 0,\n    httpAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 80,\n      protocol: 'http:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {},\n      freeSockets: [Object: null prototype] {\n        'localhost:5984:': [ [Socket], [length]: 1 ]\n      },\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 1,\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    httpsAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 443,\n      protocol: 'https:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {},\n      freeSockets: [Object: null prototype] {},\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 0,\n      maxCachedSessions: 100,\n      _sessionCache: { map: {}, list: [ [length]: 0 ] },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    }\n  },\n  headers: {\n    uri: 'http://XXXXXX:XXXXXX@localhost:5984/products/undefined',\n    statusCode: 404,\n    'cache-control': 'must-revalidate',\n    'content-type': 'application/json',\n    date: 'Mon, 02 Jun 2025 03:04:55 GMT',\n    'x-couch-request-id': '1ac02a5abc',\n    'x-couchdb-body-time': '0'\n  },\n  errid: 'non_200',\n  name: 'Error',\n  description: 'missing',\n  error: 'not_found',\n  reason: 'missing'\n}","service":"sales-management-service","timestamp":"2025-06-02 10:04:55"}
{"level":"error","message":"Create order error: Error: missing\n    at responseHandler (C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:206:20)\n    at C:\\Users\\lenovo\\Downloads\\sales-management-main\\sales-management-main\\node_modules\\nano\\lib\\nano.js:456:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  [stack]: [Getter/Setter],\n  [message]: 'missing',\n  scope: 'couch',\n  statusCode: 404,\n  request: {\n    method: 'get',\n    headers: {\n      'content-type': 'application/json',\n      accept: 'application/json',\n      'user-agent': 'nano/10.1.4 (Node.js v22.13.1)',\n      'Accept-Encoding': 'deflate, gzip'\n    },\n    qsStringifyOptions: { arrayFormat: 'repeat' },\n    url: 'http://XXXXXX:XXXXXX@localhost:5984/products/undefined',\n    params: undefined,\n    paramsSerializer: {\n      serialize: [Function: serialize] { [length]: 1, [name]: 'serialize' }\n    },\n    data: undefined,\n    maxRedirects: 0,\n    httpAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 80,\n      protocol: 'http:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {},\n      freeSockets: [Object: null prototype] {\n        'localhost:5984:': [ [Socket], [length]: 1 ]\n      },\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 1,\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    httpsAgent: Agent {\n      _events: [Object: null prototype] {\n        free: [Function (anonymous)] { [length]: 2, [name]: '' },\n        newListener: [Function: maybeEnableKeylog] {\n          [length]: 1,\n          [name]: 'maybeEnableKeylog',\n          [prototype]: [Object]\n        }\n      },\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 443,\n      protocol: 'https:',\n      options: [Object: null prototype] {\n        keepAlive: true,\n        maxSockets: 50,\n        keepAliveMsecs: 30000,\n        noDelay: true,\n        path: null\n      },\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype] {},\n      freeSockets: [Object: null prototype] {},\n      keepAliveMsecs: 30000,\n      keepAlive: true,\n      maxSockets: 50,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 0,\n      maxCachedSessions: 100,\n      _sessionCache: { map: {}, list: [ [length]: 0 ] },\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    }\n  },\n  headers: {\n    uri: 'http://XXXXXX:XXXXXX@localhost:5984/products/undefined',\n    statusCode: 404,\n    'cache-control': 'must-revalidate',\n    'content-type': 'application/json',\n    date: 'Mon, 02 Jun 2025 03:06:21 GMT',\n    'x-couch-request-id': '8b0ff5ffd5',\n    'x-couchdb-body-time': '0'\n  },\n  errid: 'non_200',\n  name: 'Error',\n  description: 'missing',\n  error: 'not_found',\n  reason: 'missing'\n}","service":"sales-management-service","timestamp":"2025-06-02 10:06:22"}
